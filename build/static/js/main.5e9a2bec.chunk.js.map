{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/contactService.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handler","value","onChange","PersonForm","addContact","newName","newNumber","onChangeName","onChangeNumber","onSubmit","type","baseUrl","axios","get","then","response","data","contact","post","id","put","url","delete","createHTMLelements","contactsToShow","contacts","setContacts","setErrorMessage","setIsError","map","action","createOnClickAction","name","number","onClick","contactService","returnedContact","newCompleteContactsList","setTimeout","catch","error","console","log","Object","keys","length","Persons","item","key","Notification","message","isError","className","CheckIfIncluded","reduce","bool","App","useState","setNewName","setNewNumber","newFilter","setNewFilter","showAll","setShowAll","errorMessage","useEffect","initialContacts","changeContact","find","c","changedContact","toLowerCase","includes","event","target","preventDefault","contactObject","oldContact","window","confirm","returnedContacts","concat","updatedContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e9a2bec.chunk.js","sourcesContent":["\r\nconst Filter = ({filter, handler}) => {\r\n    return (\r\n      <div>\r\n        filter with: <input value={filter} onChange={handler} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","\r\nconst PersonForm = ({addContact, newName, newNumber, onChangeName, onChangeNumber}) => {\r\n    return (\r\n      <form onSubmit={addContact}>\r\n        <div>\r\n          name: <input value={newName}\r\n          onChange={onChangeName}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber}\r\n          onChange={onChangeNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = contact => {\r\n  const request = axios.post(baseUrl, contact)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, contact) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, contact)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst goodRiddance = (id) => {\r\n  const url = `${baseUrl}/${id}`\r\n  const request = axios.delete(url)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, goodRiddance}","import contactService from \"../services/contactService\"\r\n\r\nconst Persons = ({contactsToShow, contacts, setContacts, setErrorMessage, setIsError}) => {\r\n  return (\r\n    <div>\r\n      {createHTMLelements({contactsToShow, contacts, setContacts, setErrorMessage, setIsError})\r\n      .filter(item => item.key !== null)}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst createHTMLelements = ({contactsToShow, contacts, setContacts, setErrorMessage, setIsError}) => {\r\n  \r\n  return (\r\n    contactsToShow.map(contact => {\r\n      const id = contact.id\r\n      const action = createOnClickAction({setContacts, contacts, id, setErrorMessage, setIsError})\r\n      return (\r\n        <p key={contact.id}> {contact.name} {contact.number} <button onClick={action} > delete </button> </p>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nconst createOnClickAction = ({contacts, id, setContacts, setErrorMessage, setIsError}) => {\r\n  const action = () => {\r\n    contactService\r\n    .goodRiddance(id)\r\n    .then(returnedContact => {\r\n      setContacts(newCompleteContactsList({contacts, id, returnedContact}))\r\n      setErrorMessage(\r\n        `Contact was removed successfully`\r\n      )\r\n      setIsError(false)\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n    .catch(error => {\r\n      console.log('error', error)\r\n      setErrorMessage(\r\n        `Contact was already removed from the server`\r\n      )\r\n      setIsError(true)\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n  }\r\n  return action\r\n}\r\n\r\nconst newCompleteContactsList = ({contacts, id, returnedContact}) => {\r\n  const newContacts =  \r\n  contacts.map(contact => contact.id !== id ? contact : returnedContact)\r\n  return newContacts.filter(value => Object.keys(value).length !== 0)\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  if (isError) {\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport contactService from './services/contactService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ contacts, setContacts] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n\n  useEffect(() => {\n    console.log('effect')\n    contactService\n    .getAll()\n      .then(initialContacts => {\n        setContacts(initialContacts)\n      })\n      .catch()\n  }, [])\n\n  const onChangeName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const onChangeNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const onChangeFilter = (event) => {\n    setNewFilter(event.target.value)\n    event.target.value !== '' ? setShowAll(false) :  setShowAll(true)\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const contactObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (CheckIfIncluded(newName, contacts)){\n      const oldContact = contacts.find(c => c.name === newName)\n      let confirmation = window.confirm(`${newName} is already in the phonebook. Replace the old with new one?`)\n      if (confirmation) {\n        changeContact(oldContact.id)\n      }\n\n    } else {\n      contactService\n      .create(contactObject)\n      .then(returnedContacts => {\n        setContacts(contacts.concat(returnedContacts))\n        setErrorMessage(\n          `Contact '${newName}' was added successfully`\n        )\n        setIsError(false)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          `${newName} is already in the phonebook`, true\n        )\n        setIsError(true)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        contactService\n        .getAll()\n        .then(updatedContacts => {\n          setContacts(updatedContacts)\n        })\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const changeContact = id => {\n    const contact = contacts.find(c => c.id === id)\n    const changedContact = { ...contact, number: newNumber }\n  \n    contactService\n      .update(id, changedContact).then(returnedContact => {\n        setContacts(contacts.map(contact => contact.id !== id ? contact : returnedContact))\n        setErrorMessage(\n          `Contact '${contact.name}' was updated successfully`\n        )\n        setIsError(false)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          `${error} Contact '${contact.name}' is not on the server`\n        )\n        setIsError(true)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        console.log('error', error)\n        setContacts(contacts.filter(c => c.id !== id))\n      })\n  }\n\n  const contactsToShow = showAll\n    ? contacts \n    : contacts.filter(c => c.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} isError={isError} />\n      <Filter filter={newFilter} handler={onChangeFilter} />\n\n      <h2>Add a new contact</h2>\n      <PersonForm addContact={addContact} newName={newName} newNumber={newNumber} onChangeName={onChangeName} onChangeNumber={onChangeNumber} />\n\n      <h2>Numbers</h2>\n      <Persons contactsToShow={contactsToShow} contacts={contacts} setContacts={setContacts} setErrorMessage={setErrorMessage} setIsError={setIsError} />\n    </div>\n  )\n}\n\nconst CheckIfIncluded = (name, contacts) => {\n\n  return contacts.reduce((bool, item) => \n    bool + (item.name === name), false)\n  \n}\n\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}